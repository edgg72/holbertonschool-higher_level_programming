The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

Importing the function from the module:
	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Checking for module docstring:
	 >>> m = __import__("2-matrix_divided").__doc__
	 >>> len(m) > 1
	 True

Checking for function docstring:
	 >>> f = __import__("2-matrix_divided").matrix_divided.__doc__
         >>> len(f) > 1
         True

Checking for matrix as list:
	 >>> matrix = "Holaaa"
	 >>> matrix_divided(matrix, 1)
	 Traceback (most recent call last):
         ...
         TypeError: matrix must be a matrix (list of lists) of integers/floats

Checking for list of mixed list and non-list items:
	 >>> matrix = [[1, 2, 3], "Hello"]
	 >>> matrix_divided(matrix, 1)
	 Traceback (most recent call last):
         ...
         TypeError: matrix must be a matrix (list of lists) of integers/floats

Checking for uneven matrix:
	 >>> matrix = [[1, 2, 3], [4, 5, 6, 7]]
	 >>> matrix_divided(matrix, 3)
	 Traceback (most recent call last):
         ...
	 TypeError: Each row of the matrix must have the same size

Checking for mix of ints, floats, and bool:
	 >>> matrix = [[1, True, 3], [False, 5, 6.8]]
         >>> matrix_divided(matrix, 11)
         Traceback (most recent call last):
         ...
         TypeError: matrix must be a matrix (list of lists) of integers/floats

Checking for mix of ints, floats, and tuple:
         >>> matrix = [[1, (1,), 3], [4, 5, 6.8]]
         >>> matrix_divided(matrix, 11)
         Traceback (most recent call last):
         ...
         TypeError: matrix must be a matrix (list of lists) of integers/floats

Checking for div as non-number:
	 >>> matrix = [[1, 2, 3], [4, 5, 6]]
	 >>> matrix_divided(matrix, "A")
	 Traceback (most recent call last):
         ...
         TypeError: div must be a number

Checking for div as bool:
	 >>> matrix = [[1, 2, 3], [4, 5, 6]]
         >>> matrix_divided(matrix, True)
         Traceback (most recent call last):
         ...
         TypeError: div must be a number

Checking for division by zero:
	 >>> matrix_divided(matrix, 0)
	 Traceback (most recent call last):
	 ...
	 ZeroDivisionError: division by zero

Checking for negative numerators:
	 >>> matrix = [[-1, -2, -3], [-4, -5, -6]]
	 >>> matrix_divided(matrix, 3)
	 [[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]
         >>> matrix
         [[-1, -2, -3], [-4, -5, -6]]

Checking for div as negative:
	 >>> matrix = [[1, 2, 3], [4, 5, 6]]
         >>> matrix_divided(matrix, -3)
         [[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]
         >>> matrix
         [[1, 2, 3], [4, 5, 6]]

Checking for empty matrix:
	 >>> matrix = []
	 >>> matrix_divided(matrix, 1)
	 []
	 >>> matrix
	 []

Checking for division with infinity in numerator:
	 >>> matrix = [[1, float('inf'), 3], [4, 5, 6]]
	 >>> matrix_divided(matrix, 1)
         [[1.0, inf, 3.0], [4.0, 5.0, 6.0]]

Checking for division with infinity in numerator and denomenator
	 >>> matrix_divided(matrix, float('inf'))
	 [[0.0, nan, 0.0], [0.0, 0.0, 0.0]]
